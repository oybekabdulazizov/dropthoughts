import { type ClassValue, clsx } from 'clsx';
import { twMerge } from 'tailwind-merge';

// generated by shadcn
export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

// generated by chatgpt
export function isBase64Image(imageData: string) {
  const base64Regex = /^data:image\/(png|jpe?g|gif|webp);base64,/;
  return base64Regex.test(imageData);
}

// generated by chatgpt

export function calculateRelativeTimes(pastDate: Date): string {
  const now = new Date();
  const elapsedMilliseconds = now.getTime() - pastDate.getTime();

  const rtf = new Intl.RelativeTimeFormat('en', { numeric: 'auto' });
  let relativeTime: string = '';
  if (elapsedMilliseconds < 1000) {
    relativeTime = rtf.format(
      -Math.floor(elapsedMilliseconds / 1000),
      'second'
    );
  } else if (elapsedMilliseconds < 60 * 1000) {
    relativeTime = rtf.format(
      -Math.floor(elapsedMilliseconds / 1000),
      'second'
    );
  } else if (elapsedMilliseconds < 60 * 60 * 1000) {
    relativeTime = rtf.format(
      -Math.floor(elapsedMilliseconds / (60 * 1000)),
      'minute'
    );
  } else if (elapsedMilliseconds < 24 * 60 * 60 * 1000) {
    relativeTime = rtf.format(
      -Math.floor(elapsedMilliseconds / (60 * 60 * 1000)),
      'hour'
    );
  } else {
    relativeTime = rtf.format(
      -Math.floor(elapsedMilliseconds / (24 * 60 * 60 * 1000)),
      'day'
    );
  }

  return relativeTime;
}
